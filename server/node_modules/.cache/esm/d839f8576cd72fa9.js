let bcrypt;_6cd‍.x([["default",()=>_6cd‍.o]]);_6cd‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);
_6cd‍.d({

Query: {
  getUser: (parent, {id}, {models}) => models.User.findOne({where: {id}}),
  allUsers: (parent, args, {models}) => models.User.findAll()
},
Mutation: {
  register: async (parent, {password, ...otherArgs}, {models}) => {
    try {
      const hashedPassword = await bcrypt.hash(password,12);
      await models.User.create({...otherArgs, password: hashedPassword});
      return true;
    }
    catch(err){
      return false
    }


  },
}
});
