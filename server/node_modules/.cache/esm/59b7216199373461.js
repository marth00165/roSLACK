let formatErrors,requiresAuth;_993‍.x([["default",()=>_993‍.o]]);_993‍.w("../formatErrors",[["default",["formatErrors"],function(v){formatErrors=v}]]);_993‍.w("../permissions",[["default",["requiresAuth"],function(v){requiresAuth=v}]]);


_993‍.d({
  Mutation: {
    createChannel: requiresAuth.createResolver(async (parent, args, { models, user }) => {
      try {
        const team = await models.Team.findOne({ where: { id: args.team_id } }, { raw: true });
        if (team.owner !== user.id) {
          return {
            ok: false,
            errors: [
              {
                path: 'name',
                message: 'You have to be the owner of the team to create channels',
              },
            ],
          };
        }

        const channel = await models.Channel.create(args);
        return {
          ok: true,
          channel,
        };
      } catch (err) {
        _993‍.g.console.log(err);
        return {
          ok: false,
          errors: formatErrors(err, models),
        };
      }
    }),
  },
});
